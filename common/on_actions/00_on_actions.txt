on_actions = {
	on_startup = {
		effect = {
			# Add Canals
			IF = {
				limit = {
					has_dlc = "Gotterdammerung" 
				}
				58 = {
					add_building_construction = {
						type = canal_kiel
						level = 1
						instant_build = yes
						province =  6389
					}
				}
				# 685 = {
				# 	add_building_construction = {
				# 		type = canal_panama
				# 		level = 1
				# 		instant_build = yes
				# 		province =  7617
				# 	}
				# }
			}
		}
	}
	# country 
	on_new_term_election = {
		random_events = {
			100 = election.2 
			100 = election.3
			100 = election.4
			100 = election.5
			100 = election.6
			100 = election.11
			100 = election.12
			100 = election.13
			100 = election.14
			100 = election.15
		}
	}
	
	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {

		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}

	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#
	#}

	#on_five_year_pulse = {
	#
	#}
	
	on_leave_faction = {
		effect = {
			if = {
				limit = {
					NOT = {
						has_autonomy_state = autonomy_tgwr_protectorate
							has_autonomy_state = autonomy_tgwr_informal_protectorate
							has_autonomy_state = autonomy_tgwr_ottoman_emirate
							has_autonomy_state = autonomy_tgwr_concession
					}

				}	
				FROM = {
					add_opinion_modifier = {
						modifier = faction_traitor
						target = ROOT
						days = 365
					}
				
					add_opinion_modifier = {
						modifier = faction_traitor_trade
						target = ROOT
						days = 365
					}
				}
			}
		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			#Give achievement to nation joining a faction, but not in one from game start
			if = {
				limit = {
					date > 1936.01.02
				}
				FROM = {
					if = {
						limit = {
							is_faction_leader = no
						}
						set_country_flag = achievement_has_joined_faction
					}
				}
			}
			#Remove anti_soviet_pact if joining commie Soviet in faction
	
			# Sunset invasion check
			if = {
				limit = {
					is_subject = no
					OR = {
						AND = {
							tag = MEX
							FROM = {
								capital_scope = {
									NOT = { is_on_continent = south_america }
								}
							}
						}
						AND = {
							FROM = {
								tag = MEX
							}
							capital_scope = {
								NOT = { is_on_continent = south_america }
							}
						}
					}
				}
				set_country_flag = achievement_failed_sunset_invasion
			}			
		}
	}

	#FROM is faction leader on join faction requests. THIS DOES NOT FIRE ON ADD_TO_FACTION EFFECT! USE ON_OFFER_JOIN_FACTION!
	on_join_faction = {
		effect = {
			set_country_flag = achievement_has_joined_faction
			#Remove anti_soviet_pact if joining commie Soviet in faction

			# Sunset invasion check
			if = {
				limit = {
					is_subject = no
					OR = {
						AND = {
							tag = MEX
							FROM = {
								capital_scope = {
									NOT = { is_on_continent = south_america }
								}
							}
						}
						AND = {
							FROM = {
								tag = MEX
							}
							capital_scope = {
								NOT = { is_on_continent = south_america }
							}
						}
					}
				}
				set_country_flag = achievement_failed_sunset_invasion
			}
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
			

			## Soviet defensive war while having purge penalty

			## Soviet war after purge


			# Remove pact opinion modifiers if at war with Germany

			#Germany has started a war - allies should try to contain Germany
			if = {
				limit = {
					ROOT = {
						TAG = GER
					}
					NOT = {
						has_global_flag = GER_has_started_war
					}
				}
				set_global_flag = GER_has_started_war
			}
			#if France and UK are not in faction but just in defensive pact, France can just join anyway to fuck germans
			if = {
				limit = {
					ROOT = {
						tag = ENG
						is_guaranteed_by = FRA
					}
					FROM = {
						tag = GER
					}
					FRA = {
						has_war_with_major = no
					}
				}
				FRA = {
					country_event = {
						id = ww1_france.625
						days = 7
					}
				}
			}
			#same if Russia attack germany : UK can join despite just being in defensive pact
			if = {
				limit = {
					ROOT = {
						tag = RUS
						OR = {
							is_guaranteed_by = ENG
							any_allied_country = {
								is_guaranteed_by = ENG
							}
						}
					}
					FROM = {
						tag = GER
					}
					ENG = {
						has_war_with_major = no
					}
				}
				ENG = {
					country_event = {
						id = ww1_england.276
						days = 14
					}
				}
			}

			#finaly if France attack germany and is not in faction with UK
			if = {
				limit = {
					ROOT = {
						tag = FRA
						OR = {
							is_guaranteed_by = ENG
							any_allied_country = {
								is_guaranteed_by = ENG
							}
						}
					}
					FROM = {
						tag = GER
					}
					ENG = {
						has_war_with_major = no
					}
				}
				ENG = {
					country_event = {
						id = ww1_england.278
						days = 14
					}
				}
			}



			#Call Anti-Soviet pact members to war


			#Remove MEFO bills if Germany goes to war


			#Remove MEFO bills if Germany is declared war on


			#Remove previous ideology civil war faction from Democratic Germany faction and add Democratic civil war faction to Germany's faction


			#If prepared by siphoning equipment, receive equipment back
			if = {
				limit = {
					FROM = {
						has_civil_war = yes
						has_country_flag = siphoned_equipment_stockpiles_for_civil_war
					}
					has_civil_war = yes
				}
				FROM = {
					clr_country_flag = siphoned_equipment_stockpiles_for_civil_war
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = 1000
					}
				}
			}

			#If prepared with surprise attack plan, get bonus
			if = {
				limit = {
					FROM = {
						has_civil_war = yes
						has_country_flag = formulated_surprise_attack_plan_for_civil_war
					}
					has_civil_war = yes
				}
				FROM = {
					clr_country_flag = formulated_surprise_attack_plan_for_civil_war
					add_timed_idea = {
						idea = civil_war_surprise_attack_plan
						days = 30
					}
				}
			}

		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			#news_event = { id = news.159 }
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
	    effect = {
			if = {
		  	 	limit = {
				    has_civil_war = no
					FROM = { has_civil_war = no }
				}
				news_event = { id = country_capitulated.0 days = 0 }
			}
		}
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
		}
	}

	on_government_change = {
		effect = {			
			if = {
				limit = { has_government = democratic }
				if = {
					limit = { has_idea = democratic_opposition_voicing_protests }
					remove_ideas = democratic_opposition_voicing_protests
				}
				if = {
					limit = { has_idea = democratic_revolutionaries }
					remove_ideas = democratic_revolutionaries
				}
				if = {
					limit = { has_idea = reign_of_terror }
					remove_ideas = reign_of_terror
				}
			}
			if = {
				limit = { has_government = communism }
				if = {
					limit = { has_idea = communist_partisans_recruiting }
					remove_ideas = communist_partisans_recruiting
				}
				if = {
					limit = { has_idea = communist_revolutionaries }
					remove_ideas = communist_revolutionaries
				}
				if = {
					limit = { has_idea = communism_defeated }
					remove_ideas = communism_defeated
				}
			}
			if = {
				limit = { has_government = fascism }
				if = {
					limit = { has_idea = fascist_assault_divisions }
					remove_ideas = fascist_assault_divisions
				}
				if = {
					limit = { has_idea = fascist_revolutionaries }
					remove_ideas = fascist_revolutionaries
				}
				if = {
					limit = { has_idea = fascism_defeated }
					remove_ideas = fascism_defeated
				}

			}

		}
	}

	on_coup_succeeded = {
		effect = {
			#Turn elections on for democracies created from coup
			random_other_country = {
				limit = {
					has_government = democratic
					original_tag = ROOT
				}
				set_politics = {
					ruling_party = democratic
					elections_allowed = yes
				}
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
			if = {
				limit = {
					has_government = democratic			
				}
				set_politics = {
					ruling_party = democratic
					elections_allowed = yes
				}
			}
			#End of ideology Civil War
			if = {
				limit = {
					has_country_flag = ideology_civil_war
				}
				country_event = { id = generic.11 days = 1 }
			}
		}
	}
	# From is owner country
	on_army_leader_daily = {
		effect = {
			if = {
				limit = {
					check_variable = { random < 0.02 }
					NOT = { has_trait = sick }
					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
					divide_temp_variable = { temp = num_units }
					check_variable = { temp > 0.75 }
					NOT = { has_unit_leader_flag = recently_sick }
				}	
				add_timed_unit_leader_trait = {
					trait = sick
					days = 30
				}			
				unit_leader_event = { id = generic.17 }
				if = {
					limit = {
						has_character_flag = unit_leader_can_die_from_sickness
					}
					unit_leader_event = { 
						id = ww1_generic.7 
						days = 30
					}
				}	
			}
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = {
								has_character_flag = unit_leader_can_be_KIA
							}	
						}
						set_character_flag = character_died
						if = {
							limit = {
								FROM = {
									tag = SRA
									has_war_with = SOV
								}
								has_character_flag = drozdovsky_march
							}
							unit_leader_event = { id = ww1_sra.10 }
						}
						else = {
							unit_leader_event = { id = ww1_generic.6 }
						}				
					}
					50 = {
						add_timed_unit_leader_trait = {
							trait = wounded
							days = 90
						}
						unit_leader_event = { id = generic.18 }
					}
				}
			}
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.005 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = {
								has_character_flag = unit_leader_can_be_KIA
							}	
						}
						set_character_flag = character_died
						if = {
							limit = {
								FROM = {
									tag = SRA
									has_war_with = SOV
								}
								has_character_flag = drozdovsky_march
							}
							unit_leader_event = { id = ww1_sra.10 }
						}
						else = {
							unit_leader_event = { id = ww1_generic.6 }
						}				
					}
					50 = {
						add_timed_unit_leader_trait = {
							trait = wounded
							days = 90
						}
						unit_leader_event = { id = generic.18 }
					}
				}
			}
		}
	}
	
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
	
	# root country that invades
	# scope state that is invaded
	# from scope state that the invasion started
	# on_naval_invasion = {
	# 	effect = {
	# 	}
	# }
	
	
	# root country that paradrops
	# scope state that is paradroped into
	# from scope state that the paradrop started
	on_paradrop = {
	    effect = {
		    set_country_flag = has_paradropped_flag
		}
	}
	#on_ruling_party_change = { 
	#	effect = {
	#		every_owned_state = {
	#			limit = {
	#				is_controlled_by = ROOT
	#				NOT = {
	#					is_core_of = ROOT
	#				}
	#			}
	#
	#			set_temp_variable = { comp_change = random }
	#			multiply_temp_variable = { comp_change = -15 }
	#			add_to_temp_variable = { comp_change = -10 }
	#
	#			add_compliance = comp_change
	#		}
	#	}
	#}
}
