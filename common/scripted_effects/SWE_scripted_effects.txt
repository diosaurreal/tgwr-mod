SWE_increase_emigration = {
	# Old effect repurposed
	custom_effect_tooltip = adjust_emigration_problem_tt
	add_to_variable = {
		tooltip = monthly_population_tt
		var = SWE_emigration_monthly_population
		value = -0.03
	}
}
SWE_decrease_emigration = {
	custom_effect_tooltip = adjust_emigration_problem_tt
	add_to_variable = {
		tooltip = monthly_population_tt
		var = SWE_emigration_monthly_population
		value = 0.03
	}
}

# Riksdagen
# Figure out best way to show these
SWE_first_chamber_initial = {
	# Variables for First chamber parties
	set_variable = {
		var = AV_f	# Allmänna valmansförbundet - Starts as "Första kammarens moderata parti" - Moderate Conservatives
		value = 50
	}
	set_variable = {
		var = H_f	# Det förenade högerpartiet - Conservatives
		value = 37	# assumed amount, to be looked into
	}
	set_variable = {
		var = FRI_f	# Frisinnade landsföreningen - Liberal
		value = 44	# was: 7
	}
	set_variable = {
		var = SAP_f	# Sveriges socialdemokratiska arbetareparti  - Social democratic
		value = 19	# was: 3
	}
	# These don't do anything at start essentially
	set_variable = {
		var = V_f	# Sveriges socialdemokratiska vänsterparti  - Communist
		value = 0
	}
	set_variable = {
		var = C_f	# Bondeförbundet - Agrarian
		value = 0
	}
	set_variable = {	# For ahistorical
		var = NAP_f
		value = 0
	}
	# Liberals need a split party for later
	
	SWE_init_first_chamber = yes
}
SWE_second_chamber_initial = {
	# Variables for Second chamber parties
	# 230 seats
	set_variable = {
		var = AV_a	# Nationella framstegspartiet - Conservatives
		value = 27
	}
	set_variable = {
		var = LAN_a	# Lantmannapartiet - Agrarian
		value = 52
	}
	set_variable = {
		var = FRI_a	# Liberala samlingspartiet - Liberal
		value = 96
	}
	set_variable = {
		var = SAP_a	# Sveriges socialdemokratiska arbetareparti  - Social democratic
		value = 34
	}
	# Independents - only for first election really, could be combined into one "independent" for performance
	# These independs where
		# 7 leftwing, 7 rightwing, 1 liberal and 6 unknown
	set_variable = {
		var = independents_a	# filler, should be few
		value = 21
	}
	# For later
	set_variable = {
		var = V_a	# Sveriges socialdemokratiska vänsterparti  - Communist
		value = 0
	}
	set_variable = {
		var = SSV_a	# Sverges socialdemokratiska vänsterparti - Socialdemocratic - Splinter
		value = 0
	}
	set_variable = {
		var = SKP_a	# Sverges kommunistiska parti (1924) - Communist - Splinter (only through event)
		value = 0
	}
	set_variable = {
		var = LIB_a	# Sveriges liberala parti  - Liberal (after split)
		value = 0
	}
	
	SWE_init_second_chamber = yes
}

SWE_recalculate_first_chamber = {
	set_temp_variable = {
		var = con_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = lib_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = agr_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = fas_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = soc_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = com_vote_temp
		value = 0
	}
	# Democratic Support
		# Goes to Con, Lib, Agr and Soc
	add_to_temp_variable = {
		var = con_vote_temp
		value = party_popularity_100@democratic
	}
	add_to_temp_variable = {
		var = lib_vote_temp
		value = party_popularity_100@democratic
	}
	add_to_temp_variable = {
		var = agr_vote_temp
		value = party_popularity_100@democratic
	}
	add_to_temp_variable = {
		var = soc_vote_temp
		value = party_popularity_100@democratic
	}
	if = {
		limit = {
			NOT = { has_country_flag = SWE_suffrage_flag }
		}
		# Light Bias towards agrarian people
		multiply_temp_variable = {
			var = con_vote_temp
			value = 0.32
		}
		multiply_temp_variable = {
			var = lib_vote_temp
			value = 0.42
		}
		multiply_temp_variable = {
			var = agr_vote_temp
			value = 0.24
		}
		multiply_temp_variable = {
			var = soc_vote_temp
			value = 0.02
		}
	}
	else_if = {	# Slightly tips scale in favor of liberals
		limit = { has_idea = SWE_new_liberalism }
		multiply_temp_variable = {
			var = con_vote_temp
			value = 0.22
		}
		multiply_temp_variable = {
			var = lib_vote_temp
			value = 0.42
		}
		multiply_temp_variable = {
			var = agr_vote_temp
			value = 0.16
		}
		multiply_temp_variable = {
			var = soc_vote_temp
			value = 0.20
		}
	}
	else = {
		multiply_temp_variable = {
			var = con_vote_temp
			value = 0.21
		}
		multiply_temp_variable = {
			var = soc_vote_temp
			value = 0.30
		}
		multiply_temp_variable = {
			var = lib_vote_temp
			value = 0.30
		}
		multiply_temp_variable = {
			var = agr_vote_temp
			value = 0.19
		}
	}
	# Non-Aligned/Authorianism
		# Goes to Con, Agr and Fas
	set_temp_variable = {
		var = con_vote_temp_fake
		value = party_popularity_100@neutrality
	}
	set_temp_variable = {
		var = agr_vote_temp_fake
		value = party_popularity_100@neutrality
	}
	set_temp_variable = {
		var = fas_vote_temp_fake
		value = party_popularity_100@neutrality
	}
	if = {
		limit = { has_country_flag = SWE_suffrage_flag }
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.58
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.3
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.12
		}
	}
	else = {
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.6
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.37
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.03
		}
	}
	add_to_temp_variable = {
		var = con_vote_temp
		value = con_vote_temp_fake
	}
	add_to_temp_variable = {
		var = agr_vote_temp
		value = agr_vote_temp_fake
	}
	add_to_temp_variable = {
		var = fas_vote_temp
		value = fas_vote_temp_fake
	}
	# Fascism Support
		# Goes to Con, Agr and Fas
	set_temp_variable = {
		var = con_vote_temp_fake
		value = party_popularity_100@fascism
	}
	set_temp_variable = {
		var = agr_vote_temp_fake
		value = party_popularity_100@fascism
	}
	set_temp_variable = {
		var = fas_vote_temp_fake
		value = party_popularity_100@fascism
	}
	if = {
		limit = {
			has_completed_focus = SWE_creation_of_nationalistiskt_arbetarparti
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.72
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.1
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.18
		}
	}
	else_if = {
		limit = {
			has_country_flag = SWE_suffrage_flag
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.6
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.22
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.18
		}
	}
	else = {
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.5
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.28
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.22
		}
	}
	add_to_temp_variable = {
		var = con_vote_temp
		value = con_vote_temp_fake
	}
	add_to_temp_variable = {
		var = fas_vote_temp
		value = fas_vote_temp_fake
	}
	add_to_temp_variable = {
		var = agr_vote_temp
		value = agr_vote_temp_fake
	}
	# Communist Support
		# Goes to soc, lib and com
	set_temp_variable = {
		var = soc_vote_temp_fake
		value = party_popularity_100@communism
	}
	set_temp_variable = {
		var = lib_vote_temp_fake
		value = party_popularity_100@communism
	}
	set_temp_variable = {
		var = com_vote_temp
		value = party_popularity_100@communism
	}
	# For now
	if = {	# to be adjusted
		limit = { has_government = communism }
		multiply_temp_variable = {
			var = lib_vote_temp_fake
			value = 0.02
		}
		multiply_temp_variable = {
			var = soc_vote_temp_fake
			value = 0.18
		}
		multiply_temp_variable = {
			var = com_vote_temp
			value = 0.8
		}
	}
	else_if = {
		limit = {
			has_country_flag = SWE_suffrage_flag
		}
		multiply_temp_variable = {
			var = soc_vote_temp_fake
			value = 0.70
		}
		multiply_temp_variable = {
			var = lib_vote_temp_fake
			value = 0.12
		}
		multiply_temp_variable = {
			var = com_vote_temp
			value = 0.18
		}
	}
	else = {
		# Representing loss of soc votes to liberals early on
		multiply_temp_variable = {
			var = soc_vote_temp_fake
			value = 0.52
		}
		multiply_temp_variable = {
			var = lib_vote_temp_fake
			value = 0.46
		}
		multiply_temp_variable = {
			var = com_vote_temp
			value = 0.02
		}
	}
	add_to_temp_variable = {
		var = soc_vote_temp
		value = soc_vote_temp_fake
	}
	add_to_temp_variable = {
		var = lib_vote_temp
		value = lib_vote_temp_fake
	}
	# Apply seats based on above ratio
		
	multiply_temp_variable = {
		var = con_vote_temp
		value = 1.5
	}
	multiply_temp_variable = {
		var = agr_vote_temp
		value = 1.5
	}
	multiply_temp_variable = {
		var = fas_vote_temp
		value = 1.5
	}
	multiply_temp_variable = {
		var = lib_vote_temp
		value = 1.5
	}
	multiply_temp_variable = {
		var = soc_vote_temp
		value = 1.5
	}
	multiply_temp_variable = {
		var = com_vote_temp
		value = 1.5
	}
	
	# Round votes?
	#round_variable = con_vote_temp
	#round_variable = agr_vote_temp
	#round_variable = fas_vote_temp
	#round_variable = lib_vote_temp
	#round_variable = soc_vote_temp
	#round_variable = com_vote_temp
	
	# Need way to see result to figure this out ugh
	# Max 150
	
	set_temp_variable = {
		var = allocatable_seats
		value = 150
	}
	# Conservative Allocation
	set_variable = {
		var = AV_f
		value = 0
	}
	set_variable = {
		var = H_f
		value = 0
	}
	set_variable = {
		var = C_f
		value = 0
	}
	set_variable = {
		var = NAP_f
		value = 0
	}
	add_to_variable = {
		var = AV_f
		value = con_vote_temp
	}
	if = {	# For now
		limit = {
			OR = {
				has_country_leader = {
					character = SWE_ernst_trygger
					ruling_only = yes
				}
				date < 1912.1.1
			}
			NOT = { has_completed_focus = SWE_creation_of_nationalistiskt_arbetarparti }
		}
		add_to_variable = {
			var = H_f
			value = fas_vote_temp
		}
	}
	else_if = {
		limit = {
			has_completed_focus = SWE_creation_of_nationalistiskt_arbetarparti
		}
		set_temp_variable = {
			var = fas_vote_temp_2
			value = fas_vote_temp
		}
		if = {
			limit = { has_government = neutrality }
			multiply_temp_variable = {
				var = fas_vote_temp_2
				value = 0.88
			}
			multiply_temp_variable = {
				var = fas_vote_temp
				value = 0.12
			}
		}
		else_if = {
			limit = { has_government = fascism }
			multiply_temp_variable = {
				var = fas_vote_temp_2
				value = 0.79
			}
			multiply_temp_variable = {
				var = fas_vote_temp
				value = 0.21
			}
		}
		else = {
			multiply_temp_variable = {
				var = fas_vote_temp_2
				value = 0.68
			}
			multiply_temp_variable = {
				var = fas_vote_temp
				value = 0.32
			}
		}
		add_to_variable = {
			var = NAP_f
			value = fas_vote_temp_2
		}
		add_to_variable = {
			var = H_f
			value = fas_vote_temp
		}
	}
	else = {
		add_to_variable = {
			var = AV_f
			value = fas_vote_temp
		}
	}
	if = {
		limit = {
			# One of these must be true for priority to go to these parties
			OR = {
				AND = {
					has_completed_focus = SWE_creation_of_nationalistiskt_arbetarparti
					OR = {
						has_government = fascism
						has_government = neutrality
					}
				}
				has_country_leader = {
					character = SWE_ernst_trygger
					ruling_only = yes
				}
				NOT = { has_country_flag = lantmanna_borgarpartiet_flag }
			}
		}
		add_to_variable = {
			var = H_f
			value = agr_vote_temp
		}
	}
	else_if = {	# Will remain under one party banner under improper suffrage for most part
		limit = {
			NOT = { has_country_flag = SWE_suffrage_flag }
		}
		add_to_variable = {
			var = AV_f
			value = agr_vote_temp
		}
	}
	else = {
		add_to_variable = {
			var = C_f
			value = agr_vote_temp
		}
	}
	
	round_variable = AV_f
	round_variable = H_f
	round_variable = NAP_f
	round_variable = C_f
	
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = AV_f
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = H_f
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = NAP_f
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = C_f
	}
	
	# Liberal Allocation
	set_variable = {
		var = FRI_f	# Frisinnade landsföreningen - Liberal
		value = 0
	}
	add_to_variable = {
		var = FRI_f
		value = lib_vote_temp
	}
	
	if = {	# Thee be banned, vote for second progressive party
		limit = { has_idea = communism_banned }
		add_to_variable = {
			var = FRI_f
			value = soc_vote_temp
		}
		add_to_variable = {
			var = FRI_f
			value = com_vote_temp
		}
	}
	
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = FRI_f
	}
	
	round_variable = FRI_f
	
	# Socialist Allocation
	set_variable = {
		var = SAP_f	# Sveriges socialdemokratiska arbetareparti  - Social democratic
		value = 0
	}
	set_variable = {
		var = V_f	# Sveriges socialdemokratiska vänsterparti  - Communist
		value = 0
	}
	# Make flag for split, to stop it even if communists vote
	if = {
		limit = { NOT = { has_idea = communism_banned } }
		add_to_variable = {
			var = SAP_f
			value = soc_vote_temp
		}
		if = {
			limit = {
				date < 1919.1.1
			}
			add_to_variable = {
				var = SAP_f
				value = com_vote_temp
			}
		}
		else = {
			multiply_variable = {
				var = com_vote_temp
				value = 0.5
			}
			add_to_variable = {
				var = SAP_f
				value = com_vote_temp
			}
			add_to_variable = {
				var = V_f
				value = com_vote_temp
			}
		}
	}
	
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = SAP_f
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = V_f
	}
	
	round_variable = SAP_f
	round_variable = V_f
	
	SWE_init_first_chamber = yes
}

SWE_recalculate_second_chamber = {
	set_temp_variable = {
		var = con_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = lib_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = agr_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = fas_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = soc_vote_temp
		value = 0
	}
	set_temp_variable = {
		var = com_vote_temp
		value = 0
	}
	# Democratic Support
		# Goes to Con, Lib, Agr and Soc
	add_to_temp_variable = {
		var = con_vote_temp
		value = party_popularity_100@democratic
	}
	add_to_temp_variable = {
		var = lib_vote_temp
		value = party_popularity_100@democratic
	}
	add_to_temp_variable = {
		var = agr_vote_temp
		value = party_popularity_100@democratic
	}
	add_to_temp_variable = {
		var = soc_vote_temp
		value = party_popularity_100@democratic
	}
	if = {	# Has Universal Suffrage
		limit = {
			has_country_flag = SWE_suffrage_flag
		}
		multiply_temp_variable = {
			var = con_vote_temp
			value = 0.22
		}
		multiply_temp_variable = {
			var = lib_vote_temp
			value = 0.34
		}
		multiply_temp_variable = {
			var = agr_vote_temp
			value = 0.16
		}
		multiply_temp_variable = {
			var = soc_vote_temp
			value = 0.28
		}
	}
	else = {
		if = {
			limit = {
				OR = {
					has_country_flag = weakening_of_left
					AND = {
						has_completed_focus = SWE_courtyard_speech
						date < 1917.1.1
					}
				}
			}
			multiply_temp_variable = {
				var = con_vote_temp
				value = 0.28
			}
			multiply_temp_variable = {
				var = lib_vote_temp
				value = 0.37
			}
			multiply_temp_variable = {
				var = soc_vote_temp
				value = 0.14
			}
		}
		else = {
			multiply_temp_variable = {
				var = con_vote_temp
				value = 0.26
			}
			multiply_temp_variable = {
				var = lib_vote_temp
				value = 0.44
			}
			multiply_temp_variable = {
				var = soc_vote_temp
				value = 0.09
			}
		}
		multiply_temp_variable = {
			var = agr_vote_temp
			value = 0.21
		}
	}
	if = {
		limit = { has_idea = communism_banned }
		multiply_temp_variable = {
			var = soc_vote_temp
			value = 0.5
		}
		add_to_temp_variable = {
			var = lib_vote_temp
			value = soc_vote_temp
		}
		add_to_temp_variable = {
			var = con_vote_temp
			value = soc_vote_temp
		}
		multiply_temp_variable = {
			var = soc_vote_temp
			value = 0
		}
	}
	
	# Non-Aligned/Authorianism
		# Goes to Con, Agr and Fas
	set_temp_variable = {
		var = con_vote_temp_fake
		value = party_popularity_100@neutrality
	}
	set_temp_variable = {
		var = agr_vote_temp_fake
		value = party_popularity_100@neutrality
	}
	set_temp_variable = {
		var = fas_vote_temp_fake
		value = party_popularity_100@neutrality
	}
	if = {
		limit = {
			has_country_flag = SWE_suffrage_flag
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.52
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.42
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.06
		}
	}
	else = {
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.48
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.44
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.08
		}
	}
	add_to_temp_variable = {
		var = con_vote_temp
		value = con_vote_temp_fake
	}
	add_to_temp_variable = {
		var = agr_vote_temp
		value = agr_vote_temp_fake
	}
	add_to_temp_variable = {
		var = fas_vote_temp
		value = fas_vote_temp_fake
	}
	# Fascism Support
		# Goes to Con, Agr and Fas
	set_temp_variable = {
		var = con_vote_temp_fake
		value = party_popularity_100@fascism
	}
	set_temp_variable = {
		var = agr_vote_temp_fake
		value = party_popularity_100@fascism
	}
	set_temp_variable = {
		var = fas_vote_temp_fake
		value = party_popularity_100@fascism
	}
	if = {
		limit = {
			has_completed_focus = SWE_creation_of_nationalistiskt_arbetarparti
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.65
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.21
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.14
		}
	}
	else_if = {
		limit = {
			has_country_flag = SWE_suffrage_flag
		}
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.4
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.39
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.21
		}
	}
	else = {
		multiply_temp_variable = {
			var = fas_vote_temp_fake
			value = 0.3
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.47
		}
		multiply_temp_variable = {
			var = agr_vote_temp_fake
			value = 0.23
		}
	}
	
	if = {	# Representing war-time concerns for now
		limit = { has_defensive_war = yes }
		add_to_temp_variable = {
			var = fas_vote_temp
			value = con_vote_temp_fake
		}
	}
	else = {
		add_to_temp_variable = {
			var = con_vote_temp
			value = con_vote_temp_fake
		}
	}
	add_to_temp_variable = {
		var = fas_vote_temp
		value = fas_vote_temp_fake
	}
	add_to_temp_variable = {
		var = agr_vote_temp
		value = agr_vote_temp_fake
	}
	# Communist Support
		# Goes to soc and com (and a tiny bit to lib)
	set_temp_variable = {
		var = soc_vote_temp_fake
		value = party_popularity_100@communism
	}
	set_temp_variable = {
		var = com_vote_temp
		value = party_popularity_100@communism
	}
	set_temp_variable = {
		var = lib_vote_temp_fake
		value = party_popularity_100@communism
	}
	# For now
	if = {	# to be adjusted
		limit = { has_government = communism }
		if = {
			limit = { has_country_flag = SWE_skp_split }
			multiply_temp_variable = {
				var = soc_vote_temp_fake
				value = 0.38
			}
			multiply_temp_variable = {
				var = com_vote_temp
				value = 0.6
			}
		}
		else = {
			multiply_temp_variable = {
				var = soc_vote_temp_fake
				value = 0.28
			}
			multiply_temp_variable = {
				var = com_vote_temp
				value = 0.7
			}
		}
		multiply_temp_variable = {
			var = lib_vote_temp_fake
			value = 0.02
		}
	}
	else_if = {
		limit = { has_idea = communism_banned }
		multiply_temp_variable = {
			var = soc_vote_temp_fake
			value = 0
		}
		multiply_temp_variable = {
			var = com_vote_temp
			value = 0
		}
	}
	else_if = {
		limit = {
			has_country_flag = SWE_suffrage_flag
		}
		if = {
			limit = { has_country_flag = SWE_skp_split }
			multiply_temp_variable = {
				var = soc_vote_temp_fake
				value = 0.86
			}
			multiply_temp_variable = {
				var = com_vote_temp
				value = 0.09
			}
		}
		else = {
			multiply_temp_variable = {
				var = soc_vote_temp_fake
				value = 0.83
			}
			multiply_temp_variable = {
				var = com_vote_temp
				value = 0.12
			}
		}
		multiply_temp_variable = {
			var = lib_vote_temp_fake
			value = 0.05
		}
	}
	else = {
		if = {
			limit = { has_country_flag = SWE_skp_split }
			multiply_temp_variable = {
				var = soc_vote_temp_fake
				value = 0.81
			}
			multiply_temp_variable = {
				var = com_vote_temp
				value = 0.07
			}
		}
		else = {
			multiply_temp_variable = {
				var = soc_vote_temp_fake
				value = 0.79
			}
			multiply_temp_variable = {
				var = com_vote_temp
				value = 0.09
			}
		}
		multiply_temp_variable = {
			var = lib_vote_temp_fake
			value = 0.12
		}
	}
	add_to_temp_variable = {
		var = soc_vote_temp
		value = soc_vote_temp_fake
	}
	add_to_temp_variable = {
		var = lib_vote_temp
		value = lib_vote_temp_fake
	}
	# Apply seats based on above ratio
	
	if = {	# This lowers influence of conservatives after failed coup...
		limit = {
			has_country_flag = sweden_anti_demo_successful
		}
		multiply_temp_variable = {
			var = con_vote_temp
			value = 0.5
		}
		set_temp_variable = {
			var = con_vote_temp_fake
			value = con_vote_temp
		}
		multiply_temp_variable = {
			var = con_vote_temp_fake
			value = 0.5
		}
		add_to_temp_variable = {
			var = lib_vote_temp
			value = con_vote_temp_fake
		}
		add_to_temp_variable = {
			var = soc_vote_temp
			value = con_vote_temp_fake
		}
		#multiply_temp_variable = {
		#	var = con_vote_temp
		#	value = 0.5
		#}
	}
	
	multiply_temp_variable = {
		var = con_vote_temp
		value = 2.3
	}
	# 'Progressive' Agrarian Votes
		# Essentially formula:
			# (1 - Current War Support + dem/soc support) * 0.09 * number of Agrarian Votes (max 18%)
			# Then it removes those votes from Agrarian
			# Then it is given to liberal party (and to the splinter one in particular)
	set_temp_variable = {
		var = agr_prog_vote_temp
		value = 1
	}
	subtract_from_temp_variable = {
		var = agr_prog_vote_temp
		value = SWE.has_war_support
	}
	add_to_temp_variable = {
		var = agr_prog_vote_temp
		value = party_popularity@democratic
	}
	add_to_temp_variable = {
		var = agr_prog_vote_temp
		value = party_popularity@communism
	}
	multiply_temp_variable = {
		var = agr_prog_vote_temp
		value = agr_vote_temp
	}
	multiply_temp_variable = {
		var = agr_prog_vote_temp
		value = 0.09
	}
	subtract_from_temp_variable = {
		var = agr_vote_temp
		value = agr_prog_vote_temp
	}
	multiply_temp_variable = {
		var = agr_prog_vote_temp
		value = 2.3
	}
	multiply_temp_variable = {
		var = agr_vote_temp
		value = 2.3
	}
	multiply_temp_variable = {
		var = fas_vote_temp
		value = 2.3
	}
	multiply_temp_variable = {
		var = lib_vote_temp
		value = 2.3
	}
	multiply_temp_variable = {
		var = soc_vote_temp
		value = 2.3
	}
	multiply_temp_variable = {
		var = com_vote_temp
		value = 2.3
	}
	
	# Round votes?
	#round_variable = con_vote_temp
	#round_variable = agr_vote_temp
	#round_variable = fas_vote_temp
	#round_variable = lib_vote_temp
	#round_variable = soc_vote_temp
	#round_variable = com_vote_temp
	
	# Need way to see result to figure this out ugh
	# Max 230
	
	set_temp_variable = {
		var = allocatable_seats
		value = 230
	}
	# For later
	
	# Conservative Allocation
	set_variable = {
		var = AV_a	# Nationella framstegspartiet - Conservatives
		value = 0
	}
	set_variable = {
		var = NP_a	# Generic Nationalist for now - placeholder
		value = 0
	}
	# Lan - C will combine quickly
	set_variable = {
		var = LAN_a	# Lantmannapartiet - Agrarian
		value = 0
	}
	set_variable = {
		var = C_a	# Bondeförbundets - Agrarian
		value = 0
	}
	add_to_variable = {
		var = AV_a
		value = con_vote_temp
	}
	if = {
		limit = {
			has_completed_focus = SWE_creation_of_nationalistiskt_arbetarparti
		}
		set_temp_variable = {
			var = fas_vote_temp_2
			value = fas_vote_temp
		}
		multiply_temp_variable = {
			var = fas_vote_temp_2
			value = 0.88
		}
		multiply_temp_variable = {
			var = fas_vote_temp
			value = 0.12
		}
		add_to_variable = {
			var = NP_a
			value = fas_vote_temp_2
		}
		add_to_variable = {
			var = LAN_a
			value = fas_vote_temp
		}
		add_to_variable = {
			var = AV_a
			value = fas_vote_temp
		}
	}
	else = {
		add_to_variable = {
			var = AV_a
			value = fas_vote_temp
		}
	}
	
	if = {	# For now
		limit = {
			SWE_agrarian_party_split = yes
		}
		add_to_variable = {
			var = C_a
			value = agr_vote_temp
		}
		if = {	# Change to country flag check later
			limit = {
				date > 1915.1.1
				date < 1921.1.21
			}
			add_to_variable = {
				var = LAN_a
				value = agr_vote_temp
			}
			multiply_variable = {
				var = C_a
				value = 0.53
			}
			multiply_variable = {
				var = LAN_a
				value = 0.47
			}
		}
	}
	else = {
		if = {
			limit = {
				NOT = { has_country_flag = lantmanna_borgarpartiet_flag }
			}
			add_to_variable = {
				var = LAN_a
				value = agr_vote_temp
			}
		}
		else = {
			add_to_variable = {
				var = AV_a
				value = agr_vote_temp
			}
		}
	}
	
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = AV_a
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = C_a
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = LAN_a
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = NP_a
	}
	
	round_variable = AV_a
	round_variable = C_a
	round_variable = LAN_a
	round_variable = NP_a
	
	# Liberal Allocation
	set_variable = {
		var = FRI_a	# Frisinnade landsföreningen - Liberal
		value = 0
	}
	set_variable = {
		var = LIB_a	# Sveriges liberala parti  - Liberal (after split)
		value = 0
	}
	add_to_variable = {
		var = FRI_a
		value = lib_vote_temp
	}
	
	if = {	# Backup
		limit = { has_idea = communism_banned }
		add_to_variable = {
			var = FRI_a
			value = soc_vote_temp
		}
		add_to_variable = {
			var = FRI_a
			value = com_vote_temp
		}
	}
	
	if = {	# Temporay to represent split
		limit = {
			date > 1920.1.1
			date < 1932.1.1
		}
		add_to_variable = {
			var = LIB_a
			value = FRI_a
		}
		multiply_variable = {
			var = FRI_a
			value = 0.85
		}
		multiply_variable = {
			var = LIB_a
			value = 0.15
		}
		
		# This is to represent liberal agricultural support (aka for social reforms)
		add_to_variable = {
			var = LIB_a
			value = agr_prog_vote_temp
		}
	}
	else = {
		add_to_variable = {
			var = FRI_a
			value = agr_prog_vote_temp
		}
	}
	
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = FRI_a
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = LIB_a
	}
	
	round_variable = FRI_a
	round_variable = LIB_a
	
	# Socialist Allocation
	set_variable = {
		var = SAP_a	# Sveriges socialdemokratiska arbetareparti  - Social democratic
		value = 0
	}
	set_variable = {
		var = V_a	# Sveriges socialdemokratiska vänsterparti  - Communist
		value = 0
	}
	set_variable = {
		var = SKP_a	# Sverges kommunistiska parti (1924) - Communist - Splinter (only through event)
		value = 0
	}
	set_variable = {
		var = SSV_a	# Sverges socialdemokratiska vänsterparti - Socialdemocratic - Splinter - should only be added during event not election
		value = 0
	}
	if = {
		limit = { NOT = { has_idea = communism_banned } }
		add_to_variable = {
			var = SAP_a
			value = soc_vote_temp
		}
		if = {
			limit = {
				date < 1919.1.1
			}
			add_to_variable = {
				var = SAP_a
				value = com_vote_temp
			}
		}
		else = {
			if = {
				limit = { has_country_flag = ssv_exists_in_sweden }
				multiply_temp_variable = {
					var = com_vote_temp
					value = 0.5
				}
				add_to_variable = {
					var = SSV_a
					value = com_vote_temp
				}
				add_to_variable = {
					var = V_a
					value = com_vote_temp
				}
				clr_country_flag = ssv_exists_in_sweden		# Was a 1 time party
			}
			else = {
				add_to_variable = {
					var = V_a
					value = com_vote_temp
				}
			}
		}
	}
	
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = SAP_a
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = V_a
	}
	subtract_from_temp_variable = {
		var = allocatable_seats
		value = SSV_a
	}
	
	round_variable = SAP_a
	round_variable = V_a
	round_variable = SSV_a
	
	set_variable = {	# Backup, should rarely if ever appear (unless math goes wrong somewhere lol)
		var = independents_a
		value = allocatable_seats
	}
	round_variable = independents_a
	
	SWE_init_second_chamber = yes
}


SWE_init_first_chamber = {
	# Should check coalition stuff?
	
	set_variable = {
		var = agrarian_f_riksdag
		value = 0
	}
	set_variable = {
		var = conservative_f_riksdag
		value = AV_f
	}
	add_to_variable = {
		var = conservative_f_riksdag
		value = H_f
	}
	if = {
		limit = {
			SWE_agrarian_party_split = yes
		}
		add_to_variable = {
			var = agrarian_f_riksdag
			value = C_f
		}
	}
	else = {
		add_to_variable = {
			var = conservative_f_riksdag
			value = C_f
		}
	}
	add_to_variable = {
		var = conservative_f_riksdag
		value = NAP_f
	}
	
	set_variable = {
		var = liberal_f_riksdag
		value = FRI_f
	}
	
	set_variable = {
		var = socialist_f_riksdag
		value = SAP_f
	}
	add_to_variable = {
		var = socialist_f_riksdag
		value = V_f
	}
}

SWE_init_second_chamber = {
	# Will need to check for coalition
	
	set_variable = {
		var = agrarian_a_riksdag
		value = 0
	}
	set_variable = {
		var = conservative_a_riksdag
		value = AV_a
	}
	add_to_variable = {
		var = conservative_a_riksdag
		value = NP_a
	}
	if = {
		limit = {
			SWE_agrarian_party_split = yes
		}
		add_to_variable = {
			var = agrarian_a_riksdag
			value = LAN_a
		}
		add_to_variable = {
			var = agrarian_a_riksdag
			value = C_a
		}
	}
	else = {
		add_to_variable = {
			var = conservative_a_riksdag
			value = LAN_a
		}
		add_to_variable = {
			var = conservative_a_riksdag
			value = C_a
		}
	}
	
	set_variable = {
		var = liberal_a_riksdag
		value = FRI_a
	}
	add_to_variable = {
		var = liberal_a_riksdag
		value = LIB_a
	}
	
	set_variable = {
		var = socialist_a_riksdag
		value = SAP_a
	}
	add_to_variable = {
		var = socialist_a_riksdag
		value = SSV_a
	}
	add_to_variable = {
		var = socialist_a_riksdag
		value = SKP_a
	}
	add_to_variable = {
		var = socialist_a_riksdag
		value = V_a
	}
}


SWE_set_kingly_approval = {
	if = {
		limit = {
			OR = {
				has_government = communism
				has_country_leader = {
					character = SWE_karl_staaff
					ruling_only = yes
				}
			}
		}
		if = {
			limit = { has_idea = SWE_gustaf_v }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_opp
				remove_idea = SWE_gustaf_v
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_apr }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_opp
				remove_idea = SWE_gustaf_v_apr
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_dis }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_opp
				remove_idea = SWE_gustaf_v_dis
			}
		}
		else = {
			custom_effect_tooltip = keeps_gustaf_spirit_remains_the_same
			add_ideas = SWE_gustaf_v_opp
		}
	}
	else_if = {
		limit = {
			OR = {
				has_country_leader_ideology = conservatism
				has_country_leader_ideology = liberal_conservatism
				has_country_leader = {
					character = SWE_ernst_trygger
					ruling_only = yes
				}
				has_country_leader = {
					character = SWE_sven_hedin
					ruling_only = yes
				}
			}
		}
		if = {
			limit = { has_idea = SWE_gustaf_v }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_apr
				remove_idea = SWE_gustaf_v
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_opp }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_apr
				remove_idea = SWE_gustaf_v_opp
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_dis }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_apr
				remove_idea = SWE_gustaf_v_dis
			}
		}
		else = {
			custom_effect_tooltip = keeps_gustaf_spirit_remains_the_same
			add_ideas = SWE_gustaf_v_apr
		}
	}
	else_if = {
		limit = {
			OR = {
				has_country_leader_ideology = social_liberalism
				has_country_leader_ideology = social_democracy
			}
		}
		if = {
			limit = { has_idea = SWE_gustaf_v }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_dis
				remove_idea = SWE_gustaf_v
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_opp }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_dis
				remove_idea = SWE_gustaf_v_opp
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_apr }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v_dis
				remove_idea = SWE_gustaf_v_apr
			}
		}
		else = {
			custom_effect_tooltip = keeps_gustaf_spirit_remains_the_same
			add_ideas = SWE_gustaf_v_dis
		}
	}
	else = {
		if = {
			limit = { has_idea = SWE_gustaf_v_dis }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v
				remove_idea = SWE_gustaf_v_dis
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_opp }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v
				remove_idea = SWE_gustaf_v_opp
			}
		}
		else_if = {
			limit = { has_idea = SWE_gustaf_v_apr }
			custom_effect_tooltip = replaces_current_gustaf_spirit_with
			swap_ideas = {
				add_idea = SWE_gustaf_v
				remove_idea = SWE_gustaf_v_apr
			}
		}
		else = {
			custom_effect_tooltip = keeps_gustaf_spirit_remains_the_same
			add_ideas = SWE_gustaf_v
		}
	}
}

SWE_increase_entente_point_amount = {
	if = {
		limit = {
			check_variable = { var = SWE_entente_points value = 1 }
		}
		add_to_variable = {
			var = SWE_entente_points
			value = 1
			tooltip = will_increase_entete_points_tt_alt
		}
	}
	else_if = {
		limit = {
			check_variable = { var = SWE_entente_points value = 1 compare = less_than }
		}
		custom_effect_tooltip = will_increase_entete_points_tt
		set_variable = { var = SWE_entente_points value = 1 }
	}
}

SWE_increase_cp_point_amount = {
	if = {
		limit = {
			check_variable = { var = SWE_cp_points value = 1 }
		}
		add_to_variable = {
			var = SWE_cp_points
			value = 1
			tooltip = will_increase_cp_points_tt_alt
		}
	}
	else_if = {
		limit = {
			check_variable = { var = SWE_cp_points value = 1 compare = less_than }
		}
		custom_effect_tooltip = will_increase_cp_points_tt
		set_variable = { var = SWE_cp_points value = 1 }
	}
}